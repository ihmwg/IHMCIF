data_mmcif_ihm-data.dic

_pdbx_dictionary_component.datablock_id   mmcif_ihm-data.dic
_pdbx_dictionary_component.dictionary_component_id  mmcif_ihm-data.dic
_pdbx_dictionary_component.title          "IHMCIF dictionary: mmcif_ihm-data"
_pdbx_dictionary_component.version        1.1

loop_
_pdbx_dictionary_component_history.dictionary_component_id
_pdbx_dictionary_component_history.version
_pdbx_dictionary_component_history.update
_pdbx_dictionary_component_history.revision
mmcif_ihm-data.dic  1.1   2025-03-24
;  
  Changes (bv)
  + Update author data type to match PDBx/mmCIF definitions
;
mmcif_ihm-data.dic  1.0   2023-12-22
;
  Changes (bv)
  + Updated dictionary files organization
;

##################
## SUB_CATEGORY ##
##################

     loop_
    _sub_category.id
    _sub_category.description
              'cartesian_coordinate'
;              The collection of x, y, and z components of a position specified
               with reference to a Cartesian (orthogonal angstrom) coordinate
               system.
;
              'cartesian_coordinate_esd'
;              The collection of estimated standard deviations of the x, y, and
               z components of a position specified with reference to a
               Cartesian (orthogonal angstrom) coordinate system.
;
              'fractional_coordinate'
;              The collection of x, y, and z components of a position specified
               with reference to unit cell directions.
;
              'fractional_coordinate_esd'
;              The collection of estimated standard deviations of the x, y, and
               z components of a position specified with reference to unit cell
               directions.
;
              'matrix'
;              The collection of elements of a matrix.
;
               miller_index
;              The collection of h, k, and l components of the Miller index of
               a reflection.
;
              'cell_length'
;              The collection of a, b, and c axis lengths of a unit cell.
;
              'cell_length_esd'
;              The collection of estimated standard deviations of the a, b, and
               c axis lengths of a unit cell.
;
              'cell_angle'
;              The collection of alpha, beta, and gamma angles of a unit cell.
;
              'cell_angle_esd'
;              The collection of estimated standard deviations of the alpha,
               beta, and gamma angles of a unit cell.
;
              'mm_atom_site_auth_label'
;              The collection of asym id, atom id, comp id and seq id
               components of an author's alternative specification for
               a macromolecular atom site.
;
              'mm_atom_site_label'
;              The collection of alt id, asym id, atom id, comp id and seq id
               components of the label for a macromolecular atom site.
;
              'vector'
;              The collection of elements of a vector.
;
              'unit_vector'
;              The collection of elements of a vector whose norm equals 1.
;
              'eigendecomposition'
;              The collection of items making up the Eigendecomposition of a
               matrix. For an n x n matrix, instances of this subcategory will
               consist of n Eigenvectors of dimension n, and n Eigenvalues.
;
              'mm_poly_res_label'
;              The collection of entity id, comp id and seq id components of the label for a residue in a polymer.
;

#########################
## CATEGORY_GROUP_LIST ##
#########################

     loop_
    _category_group_list.id
    _category_group_list.parent_id
    _category_group_list.description
##
              'inclusive_group'   .
;              The parent category group containing all of the data categories in the macromolecular dictionary.
;
              'atom_group'
              'inclusive_group'
;              Categories that describe the properties of atoms.
;
             'array_data_group'
             'inclusive_group'
;             Categories that describe array data.
;
             'axis_group'
             'inclusive_group'
;             Categories that describe axes.
;
              'audit_group'
              'inclusive_group'
;              Categories that describe dictionary maintenance and
               identification.
;
              'cell_group'
              'inclusive_group'
;              Categories that describe the unit cell.
;
              'chemical_group'
              'inclusive_group'
;              Categories that describe chemical features derived from the experimental coordinate data.
;
              'chem_comp_group'
              'inclusive_group'
;              Categories that define the chemical structure and nomenclature of the momoners and ligands in the experiment.
;
              'chem_comp_dictionary_group'
              'inclusive_group'
;              Categories defining chemical structure and nomenclature of the momoners and ligands used in
               the Chemical Component Dictionary.
;

              'chem_comp_model_group'
              'inclusive_group'
;              Categories defining structural models for chemical components defined in the Chemical Component Dictionary.
;

              'bird_dictionary_group'
              'inclusive_group'
;              Categories defining chemical structure and nomenclature of the small polymer molecules used in
               the Biologically Interesting Molecule Reference Dictionary (BIRD).
;

              'bird_family_dictionary_group'
              'inclusive_group'
;              Categories defining families of related molecules used in the Biologically Interesting Molecule Reference Dictionary (BIRD).
;

              'chem_link_group'
              'inclusive_group'
;              Categories that describe links between components of
               chemical structure.
;
              'citation_group'
              'inclusive_group'
;              Categories that provide bibliographic references.
;
              'computing_group'
              'inclusive_group'
;              Categories that describe the computational details of the experiment.
;
              'compliance_group'
              'inclusive_group'
;              Categories that are included in this dictionary specifically to
               comply with previous dictionaries.
;
              'database_group'
              'inclusive_group'
;              Categories that hold references to entries in databases that
               contain related information.
;
              'diffrn_group'
              'inclusive_group'
;              Categories that describe details of the diffraction experiment.
;
              'em_group'
              'inclusive_group'
;              Categories that describe 3-dimensional electron microscopy.
;
              'em_legacy_group'
              'inclusive_group'
;              Categories that describe 3-dimensional electron microscopy (legacy).
;
              'emdb_admin_group'
              'inclusive_group'
;              Administrative Categories for Electron Microscopy Data Bank.
;
              'emdb_extension_group'
              'inclusive_group'
;              Categories that describe 3-dimensional electron microscopy (EMDB extension).
;
              'entity_group'
              'inclusive_group'
;              Categories that describe the unique chemical and molecular entities.
;
              'entry_group'
              'inclusive_group'
;              Categories that pertain to the entire data block.
;
              'exptl_group'
              'inclusive_group'
;              Categories that hold details of the experimental conditions.
;
              'geom_group'
              'inclusive_group'
;              Categories that hold details of molecular and crystal geometry.
;
              'iucr_group'
              'inclusive_group'
;              Categories that are used for manuscript submission and
               internal processing by the staff of the International Union of
               Crystallography.
;
              'nmr_group'
              'inclusive_group'
;              Categories that describe Nuclear Magnetic Spectroscopy experiments.
;
              'pdb_group'
              'inclusive_group'
;              Categories that pertain to the file-format or data-processing
               codes used by the Protein Data Bank.
;
              'phasing_group'
              'inclusive_group'
;              Categories that describe phasing.
;
              'refine_group'
              'inclusive_group'
;              Categories that describe refinement.
;
              'refln_group'
              'inclusive_group'
;              Categories that describe the details of reflection measurements.
;
              'struct_group'
              'inclusive_group'
;              Categories that contain details about the experimental structure.
;
              'symmetry_group'
              'inclusive_group'
;              Categories that describe symmetry information.
;
             'pdbx_group'
             'inclusive_group'
;             Categories which have been added to support the data archiving and exchange for the Protein Data Bank.
;
             'pdbx_erf_group'
             'inclusive_group'
;             Categories which are used by RCSB PDB to store derived
              and computed data.
;
             'ccp4_group'
             'inclusive_group'
;             Categories from the CCP4 harvest dictionary.
;
             'ndb_group'
             'inclusive_group'
;             Categories which are used by the Nucleic Acid Database.
;
             'rcsb_group'
             'inclusive_group'
;             Categories which are used internally by the RCSB PDB.
;
             'protein_production_group'
             'inclusive_group'
;             Categories which describe the details of protein production.
;
             'solution_scattering_group'
             'inclusive_group'
;             Categories which describe the details of solution scattering experiments.
;
              'validate_group'
              'inclusive_group'
;              Categories that describe geometric properties
               of residues that deviate from expected standards
               by 6 * the expected RMSD
;
             'view_group'
             'inclusive_group'
;             Categories which are used to storing view transformations.
;

              'em_specimen'
              'inclusive_group'
;              Categories that describe electron microscopy specimens.
;

              'em_sample'
              'inclusive_group'
;              Categories that describe electron microscopy samples.
;

              'em_crystallography'
              'inclusive_group'
;              Categories that describe electron crystallography.
;
              'em_fitting'
              'inclusive_group'
;              Categories that describe electron microscopy fitting.
;
              'em_tomography'
              'inclusive_group'
;              Categories that describe electron tomography.
;
              'em_imaging'
              'inclusive_group'
;              Categories that describe electron microscopy imaging.
;

              'em_reconstruction'
              'inclusive_group'
;              Categories that describe electron microscopy reconstruction.
;
              'em_symmetry_group'
              'inclusive_group'
;              Categories that describe electron microscopy symmetry.
;
              'em_experiment'
              'inclusive_group'
;              Categories that describe electron microscopy experimental details.
;
              'em_symmetry'
              'inclusive_group'
;              Categories that describe electron microscopy symmetry details.
;

              'emd_group'
              'inclusive_group'
;              Categories describing electron microscopy that are used by the wwPDB deposition and annotation system.
;
              'chem_comp_model_group'
              'inclusive_group'
;              Categories describing experimental and computational models for individual chemical components.
;
              'dcc_group'
              'inclusive_group'
;              Categories output by the crystallographic data utility application DCC.
;
              'xfel_group'
              'inclusive_group'
;              Categories that describe X-ray Free Electron Laser (XFEL) data collection and experimental details.
;
              'diffrn_data_set_group'
              'inclusive_group'
;              Categories extending the description of measured diffraction data.
;
              'branch_group'
              'inclusive_group'
;              Categories that describe branched chain carbohydrates.
;
              'reference_sequence_group'
              'inclusive_group'
;              Categories that describe SIFTS mapping of sequence data.
;
              'ihm_group'
              'inclusive_group'
;              Categories that describe the integrative/hybrid methods extension dictionary (IHMCIF).
;

####################
## ITEM_TYPE_LIST ##
####################
#
#
#  The regular expressions defined here are not compliant
#  with the POSIX 1003.2 standard as they include the
#  '\n' and '\t' special characters.  These regular expressions
#  have been tested using version 0.12 of Richard Stallman's
#  GNU regular expression library in POSIX mode.
#
#
# For some data items, a standard syntax is assumed. The syntax is
#   described for each data item in the dictionary, but is summarized here:
#
#   Names:     The family name(s) followed by a comma, precedes the first
#              name(s) or initial(s).
#
#   Telephone numbers:
#              The international code is given in brackets and any extension
#              number is preceded by 'ext'.
#
#   Dates:     In the form yyyy-mm-dd.
#
##############################################################################

     loop_
    _item_type_list.code
    _item_type_list.primitive_code
    _item_type_list.construct
    _item_type_list.detail
               code      char
               '[][_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words ...
;
               ucode      uchar
               '[][_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               line      char
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items ...
;
               uline      uchar
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items (case insensitive)...
;
               text      char
               '[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              text item types / multi-line text ...
;
               int       numb
               '[+-]?[0-9]+'
;              int item types are the subset of numbers that are the negative
               or positive integers.
;
               float     numb
          '-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?'
;              float item types are the subset of numbers that are the floating
               numbers.
;
               name      uchar
               '_[_A-Za-z0-9]+\.[][_A-Za-z0-9%-]+'
;              name item types take the form...
;
               idname    uchar
               '[_A-Za-z0-9]+'
;              idname item types take the form...
;
               any       char
               '.*'
;              A catch all for items that may take any form...
;
               yyyy-mm-dd  char
                '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9]-[0-9][0-9]'
;
               Standard format for CIF dates.
;
               yyyy-mm-dd:hh:mm-flex  char
                '[0-9][0-9][0-9][0-9](-[0-9]?[0-9])?(-[0-9][0-9])?(:[0-9]?[0-9]:[0-9][0-9])?'
;
               Flexible date-time format.
;
               uchar3    uchar
              '[+]?[A-Za-z0-9][A-Za-z0-9]?[A-Za-z0-9]?'
;
               data item for 3 character codes
;
               uchar5    uchar
              '[+]?[A-Za-z0-9][A-Za-z0-9]?[A-Za-z0-9]?[A-Za-z0-9]?[A-Za-z0-9]?'
;
               data item for 5 character codes
;
               uchar1    uchar
              '[+]?[A-Za-z0-9]'
;
               data item for 1 character codes
;
               symop    char
               '([1-9]|[1-9][0-9]|1[0-8][0-9]|19[0-2])(_[1-9][1-9][1-9])?'
;              symop item types take the form n_klm, where n refers to the
               symmetry operation that is applied to the coordinates in the
               ATOM_SITE category identified by _atom_site_label.  It must
               match a number given in _symmetry_equiv_pos_site_id.

               k, l, and m refer to the translations that are subsequently
               applied to the symmetry transformed coordinates to generate
               the atom used.  These translations (x,y,z) are related to
               (k,l,m) by
                     k = 5 + x
                     l = 5 + y
                     m = 5 + z
               By adding 5 to the translations, the use of negative numbers
               is avoided.
;
               atcode      char
               '[][ _(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              Character data type for atom names  ...
;
               yyyy-mm-dd:hh:mm  char
    '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9](-[0-9]?[0-9])?(:[0-9]?[0-9]:[0-9][0-9])?'
;
               Standard format for CIF dates with optional time stamp.
;
               fax      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               phone      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               email      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               int-range       numb
               '[+-]?[0-9]+-[+-]?[0-9]+'
#               '-?[0-9]+(--?[0-9]+)?'
;              range of integer item types are the subset of numbers that are the negative
               or positive integers.
;
               float-range     numb
 '-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?(--?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?)?'
;              int item types are the subset of numbers that are the floating
               numbers.
;
              code30  char
        '.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?'
        'A string value, not allowed to exceed 30 characters.'
#
               binary    char
;\n--CIF-BINARY-FORMAT-SECTION--\n\
[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*\
\n--CIF-BINARY-FORMAT-SECTION----
;
;              binary items are presented as MIME-like ascii-encoded
               sections in an imgCIF.  In a CBF, raw octet streams
               are used to convey the same information.
;
# Place-holder regex for this to avoid breaking any software.
               operation_expression      char
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              sequence of parenthetical integer ranges and character codes
;
               ec-type   char
#    '[1-6](.[1-9][0-9]?)?(.[1-9][0-9]?)?(.[1-9][0-9]?[0-9]?)?'
    '([1-7]((.[1-9][0-9]?)|(.-))((.[1-9][0-9]?)|(.-))((.[1-9][0-9]?[0-9]?)|(.-)))(([ ]*,[ ]*)([1-7]((.[1-9][0-9]?)|(.-))((.[1-9][0-9]?)|(.-))((.[1-9][0-9]?[0-9]?)|(.-))))*'
;
               Approximate format of Enzyme Commission EC number. 1.2.3.4 with
               optional parts.
;

	       seq-one-letter-code char
	'(([\nUGPAVLIMCFYWHKRQNEDSTX]+)?|(\([0-9A-Z][0-9A-Z]?[0-9A-Z]?\))?)+'
;  One letter code sequence supporting parenthetical modified residues with 3-letter codes
;
               ucode-alphanum-csv      uchar
               '[A-Za-z0-9]+(,[A-Za-z0-9]+)?'
;              comma separated alpha numeric codes (single words)  (case insensitive) ...
;
               point_symmetry      char
               '[CD][1-9]|[CD][1-9][0-9]*|T|O|I'
;              Encodes point symmetry as Cn, Dn, T, O, or I  (case sensitive), where n is a positive integer.
;
               asym_id             char
               '[A-Za-z0-9]+'
;              A single chain or asym ids.
;
               id_list              char
               '[A-Za-z0-9]+(,[A-Za-z0-9]+)*'
;              A list of comma separated chain or asym ids.
;
               id_list_spc          char
               '[ \t]*[A-Za-z0-9]+([ \t]*,[ \t]*[A-Za-z0-9]+)*[ \t]*'
;              A list of comma separated chain or asym ids with optional spaces.
;
               3x4_matrices         char
               '(((([ \t]*-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? +){3})?(-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? *\n([\t ]*\n)*)){3})*((([ \t]*-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? +){3})?(-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? *\n([\t ]*\n)*)){2}((([ \t]*-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? +){3})(-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? *\n?([\t ]*\n)*))[ \t]*'
;              A set of 3x4 matrices separated by spaces and newlines on each line.
               Final newline optional. Optional spaces at start of lines. Blank lines accepted.
;
               3x4_matrix           char
               '((([ \t]*-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? +){3})?(-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? *\n([\t ]*\n)*)){2}((([ \t]*-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? +){3})(-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)? *\n?([\t ]*\n)*))[ \t]*'
;              A 3x4 matrix separated by spaces and newlines on each line.
               Final newline optional. Optional spaces at start of lines. Blank lines accepted.
;
               pdbx_related_db_id   char
               '[][_.:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words without semi-colon or comma ...
;
               pdbx_PDB_obsoleted_db_id   char
               '[0-9][0-9a-zA-Z]{3}( [0-9][0-9a-zA-Z]{3})*'
;              List of PDB ids for obsoletion - space separated
;
   positive_int        numb '[1-9][0-9]*'       'Positive integers (1,2,3,..)'
   emd_id              char 'EMD-[0-9]{4,}'     'EMDB code'
   pdb_id              char '([1-9][A-Z0-9]{3}|PDB_[A-Z0-9]{8})' 'PDB code (upper cases)'
   pdb_id_u            uchar '([1-9][A-Za-z0-9]{3}|[Pp][Dd][Bb]_[A-Za-z0-9]{8})' 'PDB code (case insensitive)'
   point_group         char '(C[1-9][0-9]*|D[2-9]|D[1-9][0-9]+|O|T|I)' 'Point group symmetry in Schoenflies notation'
   point_group_helical char '[CD][1-9][0-9]*' 'Point group symmetry for helices in Schoenflies notation'
   boolean char 'YES|NO' 'Boolean type'

   # EM uses this data type
   author char "(([A-Za-z0-9_]+(( |-|'|\. )[A-Za-z0-9_]+)*( Jr.| III)?, [A-Za-z0-9_]\.(-?[A-Za-z0-9_]+\.)*)|(Seattle Structural Genomics Center for Infectious Disease.*)|(Structural Genomics Consortium.*)|(QCRG Structural Biology Consortium.*)|(Center for Structural Genomics of Infectious Diseases.*)|(Center for Structural Biology of Infectious Diseases.*)|(Center for Structures of Membrane Proteins.*))" 'Author name in PDB format: Taylor, C.A.'
   #author char "(([A-Za-z0-9_]+(( |-|'|\. )[A-Za-z0-9_]+)*( Jr.| III)?, [A-Za-z0-9_]\.(-?[A-Za-z0-9_]+\.)*)|(Seattle Structural Genomics Center for Infectious Disease.*)|(Structural Genomics Consortium.*)|(QCRG Structural Biology Consortium.*)|(Center for Structural Genomics of Infectious Diseases.*))" 'Author name in PDB format: Taylor, C.A.'
   #author char "[A-Za-z '\-]+,\s+([A-Z\-]+\.)+$" 'Author name in PDB format: Taylor, C.A.'
   #author char "[A-Za-z0-9_]+(( |-|'|\. )[A-Za-z0-9_]+)*( Jr.| III)?, [A-Za-z0-9_]\.(-?[A-Za-z0-9_]+\.)*$" 'Author name in PDB format: Taylor, C.A.'
   orcid_id char "[0-9]{4}-[0-9]{4}-[0-9]{4}-([0-9]{3}X|[0-9]{4})"  'ORCID pattern - dddd-dddd-dddd-dddd|dddX'
   symmetry_operation char '[-+0-9XxYyZ/ ]+,[-+0-9XxYyZ/ ]+,[-+0-9XxYyZ/ ]+' 'Allowed characters for use in symmetry operation such as 1/2-x,y,1/2-z'
   sequence_dep        char '[a-zA-Z0-9\t \r\n\v\f\(\)]+$'  'Deposition specific one letter code'
   date_dep            char '([1-9][0-9](([02468][048])|([13579][26]))-02-29)|[1-9][0-9][0-9][0-9]-((((0[1-9])|(1[0-2]))-((0[1-9])|(1[0-9])|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30))))' 'Deposition specific date with better checking'
   # For citation, simpler case due to legacy data
   citation_doi        char '10\..*'  'Citation DOI specification.'
   exp_data_doi        char '10\.[0-9]{4,9}/[-._;()/:A-Za-z0-9]+'  'Experimental dataset DOI'
   deposition_email    uchar '[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9.-]+' 'code item types/single words  (case insensitive) ...'

#####################
## ITEM_UNITS_LIST ##
#####################

     loop_
    _item_units_list.code
    _item_units_list.detail
#
     'metres'                 'metres (metres)'
     'centimetres'            'centimetres (metres * 10^( -2)^)'
     'millimetres'            'millimetres (metres * 10^( -3)^)'
     'micrometres'            'micrometres (metres * 10^( -6)^)'
     'nanometres'             'nanometres  (metres * 10^( -9)^)'
     'nanometers'             'nanometers  (metres * 10^( -9)^)'
     'angstroms'              'angstroms   (metres * 10^(-10)^)'
     'picometres'             'picometres  (metres * 10^(-12)^)'
     'femtometres'            'femtometres (metres * 10^(-15)^)'
#
     'reciprocal_metres'      'reciprocal metres (metres^(-1)^)'
     'reciprocal_centimetres'
        'reciprocal centimetres ((metres * 10^( -2))^(-1))'
     'reciprocal_millimetres'
        'reciprocal millimetres ((metres * 10^( -3)^)^(-1)^)'
     'reciprocal_nanometres'
        'reciprocal nanometres  ((metres * 10^( -9)^)^(-1)^)'
     'reciprocal_angstroms'
        'reciprocal angstroms   ((metres * 10^(-10)^)^(-1)^)'
     'reciprocal_picometres'
        'reciprocal picometres  ((metres * 10^(-12)^)^(-1)^)'
#
     'micrometres_squared'    'micrometres squared (metres * 10^( -6)^)^2^'
     'nanometres_squared'     'nanometres squared (metres * 10^( -9)^)^2^'
     'angstroms_squared'      'angstroms squared  (metres * 10^(-10)^)^2^'
     '8pi2_angstroms_squared' '8pi^2^ * angstroms squared (metres * 10^(-10)^)^2^'
     'picometres_squared'     'picometres squared (metres * 10^(-12)^)^2^'
#
     'nanometres_cubed'       'nanometres cubed (metres * 10^( -9)^)^3^'
     'angstroms_cubed'        'angstroms cubed  (metres * 10^(-10)^)^3^'
     'picometres_cubed'       'picometres cubed (metres * 10^(-12)^)^3^'
#
     'kilopascals'            'kilopascals'
     'gigapascals'            'gigapascals'
#
     'hours'                  'hours'
     'minutes'                'minutes'
     'seconds'                'seconds'
     'microseconds'           'microseconds (seconds * 10^( -6)^)'
     'femtoseconds'           'femtoseconds (seconds * 10^( -15)^)'
#
     'degrees'                'degrees (of arc)'
     'milliradians'           'milliradians (of arc)'
#
     'degrees_per_minute'     'degrees (of arc) per minute'
#
     'celsius'                'degrees (of temperature) Celsius'
     'kelvins'                'temperature in Kelvin'
#
     'electrons'              'electrons'
#
     'electrons_squared'      'electrons squared'
#
     'electrons_per_nanometres_cubed'
; electrons per nanometres cubed (electrons/(metres * 10^( -9)^)^(-3)^)
;
     'electrons_per_angstroms_cubed'
; electrons per angstroms cubed (electrons/(metres * 10^(-10)^)^(-3)^)
;
     'electrons_per_picometres_cubed'
; electrons per picometres cubed (electrons/(metres * 10^(-12)^)^(-3)^)
;
     'ions_per_cm_squared_per_sec'
; ions per centimetre squared per second (ions/(meters * 10^(-2)^)^(-2)/second^)
;
     'kilowatts'              'kilowatts'
     'milliamperes'           'milliamperes'
     'kilovolts'              'kilovolts'
     'volts'                  'volts'
#
     'arbitrary'
; arbitrary system of units.
;
#
     'angstroms_degrees'      'angstroms * degrees'
#
     'degrees_squared'        'degrees squared'
#
     'mg_per_ml'              'milliliter per milligram'
#
     'ml_per_min'             'milliliters per minute'
     'microliters_per_min'     'microliters per minute'
#
     'milliliters'             'liter / 1000'
#
     'milligrams'             'grams / 1000'
#
     'megadaltons'            'megadaltons'
     'kilodaltons'            'kilodaltons'
     "kilodaltons/nanometer"  "kilodaltons/nanometer"
#
     'microns_squared'        'micrometres squared (metres * 10^( -6)^)^2^'
     'microns'                'micrometres  (metres * 10^( -6)^)'
#
     'electrons_angstrom_squared'   'electrons square angstrom'
     'electron_volts'         'electron volts'
     'kiloelectron_volts'     'KeV (electron volts * 10^( 3)^)'
#     'mg/ml'                  'mg per milliliter'
     'millimolar'             'millimolar'
     'megagrams_per_cubic_metre'       'megagrams per cubic metre'
     'pixels_per_millimetre'      'pixels per millimetre'
     'counts'                 'counts'
     'counts_per_photon'      'counts per photon'
     'pascals'                'pascals'
     'teraphotons_per_pulse'  '(photons * 10^( 12)^) per pulse'
     'joules'                 'Joules'
     'microjoules'             'joules * 10^( -6)^'
     'hertz'                   'reciprocal seconds'
     'reciprocal_seconds'     'reciprocal seconds (seconds^(-1)^)'
     'nanoseconds'            'nanoseconds (seconds * 10^( -9)^)'
#
     loop_
    _item_units_conversion.from_code
    _item_units_conversion.to_code
    _item_units_conversion.operator
    _item_units_conversion.factor
###
     'metres'                   'centimetres'              '*'   1.0E+02
     'metres'                   'millimetres'              '*'   1.0E+03
     'metres'                   'nanometres'               '*'   1.0E+09
     'metres'                   'angstroms'                '*'   1.0E+10
     'metres'                   'picometres'               '*'   1.0E+12
     'metres'                   'femtometres'              '*'   1.0E+15

     'centimetres'              'millimetres'              '*'   1.0E+01
     'centimetres'              'nanometres'               '*'   1.0E+07
     'centimetres'              'angstroms'                '*'   1.0E+08
     'centimetres'              'picometres'               '*'   1.0E+10
     'centimetres'              'femtometres'              '*'   1.0E+13
#
     'millimetres'              'centimetres'              '*'   1.0E-01
     'millimetres'              'nanometres'               '*'   1.0E+06
     'millimetres'              'angstroms'                '*'   1.0E+07
     'millimetres'              'picometres'               '*'   1.0E+09
     'millimetres'              'femtometres'              '*'   1.0E+12
#
     'nanometres'               'centimetres'              '*'   1.0E-07
     'nanometres'               'millimetres'              '*'   1.0E-06
     'nanometres'               'angstroms'                '*'   1.0E+01
     'nanometres'               'picometres'               '*'   1.0E+03
     'nanometres'               'femtometres'              '*'   1.0E+06
#
     'angstroms'                'centimetres'              '*'   1.0E-08
     'angstroms'                'millimetres'              '*'   1.0E-07
     'angstroms'                'nanometres'               '*'   1.0E-01
     'angstroms'                'picometres'               '*'   1.0E+02
     'angstroms'                'femtometres'              '*'   1.0E+05
#
     'picometres'               'centimetres'              '*'   1.0E-10
     'picometres'               'millimetres'              '*'   1.0E-09
     'picometres'               'nanometres'               '*'   1.0E-03
     'picometres'               'angstroms'                '*'   1.0E-02
     'picometres'               'femtometres'              '*'   1.0E+03
#
     'femtometres'              'centimetres'              '*'   1.0E-13
     'femtometres'              'millimetres'              '*'   1.0E-12
     'femtometres'              'nanometres'               '*'   1.0E-06
     'femtometres'              'angstroms'                '*'   1.0E-05
     'femtometres'              'picometres'               '*'   1.0E-03
###
     'reciprocal_centimetres'   'reciprocal_millimetres'   '*'   1.0E-01
     'reciprocal_centimetres'   'reciprocal_nanometres'    '*'   1.0E-07
     'reciprocal_centimetres'   'reciprocal_angstroms'     '*'   1.0E-08
     'reciprocal_centimetres'   'reciprocal_picometres'    '*'   1.0E-10
#
     'reciprocal_millimetres'   'reciprocal_centimetres'   '*'   1.0E+01
     'reciprocal_millimetres'   'reciprocal_nanometres'    '*'   1.0E-06
     'reciprocal_millimetres'   'reciprocal_angstroms'     '*'   1.0E-07
     'reciprocal_millimetres'   'reciprocal_picometres'    '*'   1.0E-09
#
     'reciprocal_nanometres'    'reciprocal_centimetres'   '*'   1.0E+07
     'reciprocal_nanometres'    'reciprocal_millimetres'   '*'   1.0E+06
     'reciprocal_nanometres'    'reciprocal_angstroms'     '*'   1.0E-01
     'reciprocal_nanometres'    'reciprocal_picometres'    '*'   1.0E-03
#
     'reciprocal_angstroms'     'reciprocal_centimetres'   '*'   1.0E+08
     'reciprocal_angstroms'     'reciprocal_millimetres'   '*'   1.0E+07
     'reciprocal_angstroms'     'reciprocal_nanometres'    '*'   1.0E+01
     'reciprocal_angstroms'     'reciprocal_picometres'    '*'   1.0E-02
#
     'reciprocal_picometres'    'reciprocal_centimetres'   '*'   1.0E+10
     'reciprocal_picometres'    'reciprocal_millimetres'   '*'   1.0E+09
     'reciprocal_picometres'    'reciprocal_nanometres'    '*'   1.0E+03
     'reciprocal_picometres'    'reciprocal_angstroms'     '*'   1.0E+01
###
     'nanometres_squared'       'angstroms_squared'        '*'   1.0E+02
     'nanometres_squared'       'picometres_squared'       '*'   1.0E+06
#
     'angstroms_squared'        'nanometres_squared'       '*'   1.0E-02
     'angstroms_squared'        'picometres_squared'       '*'   1.0E+04
     'angstroms_squared'        '8pi2_angstroms_squared'   '*'   78.9568

#
     'picometres_squared'       'nanometres_squared'       '*'   1.0E-06
     'picometres_squared'       'angstroms_squared'        '*'   1.0E-04
###
     'nanometres_cubed'         'angstroms_cubed'          '*'   1.0E+03
     'nanometres_cubed'         'picometres_cubed'         '*'   1.0E+09
#
     'angstroms_cubed'          'nanometres_cubed'         '*'   1.0E-03
     'angstroms_cubed'          'picometres_cubed'         '*'   1.0E+06
#
     'picometres_cubed'         'nanometres_cubed'         '*'   1.0E-09
     'picometres_cubed'         'angstroms_cubed'          '*'   1.0E-06
###
     'kilopascals'              'gigapascals'              '*'   1.0E-06
     'gigapascals'              'kilopascals'              '*'   1.0E+06
###
     'hours'                    'minutes'                  '*'   6.0E+01
     'hours'                    'seconds'                  '*'   3.6E+03
     'hours'                    'microseconds'             '*'   3.6E+09
#
     'minutes'                  'hours'                    '/'   6.0E+01
     'minutes'                  'seconds'                  '*'   6.0E+01
     'minutes'                  'microseconds'             '*'   6.0E+07
#
     'seconds'                  'hours'                    '/'   3.6E+03
     'seconds'                  'minutes'                  '/'   6.0E+01
     'seconds'                  'microseconds'             '*'   1.0E+06
#
     'microseconds'             'hours'                    '/'   3.6E+09
     'microseconds'             'minutes'                  '/'   6.0E+07
     'microseconds'             'seconds'                  '/'   1.0E+06
###
     'celsius'                  'kelvins'                  '-'     273.0
     'kelvins'                  'celsius'                  '+'     273.0
###
     'electrons_per_nanometres_cubed'
     'electrons_per_angstroms_cubed'                       '*'   1.0E+03
     'electrons_per_nanometres_cubed'
     'electrons_per_picometres_cubed'                      '*'   1.0E+09
#
     'electrons_per_angstroms_cubed'
     'electrons_per_nanometres_cubed'                      '*'   1.0E-03
     'electrons_per_angstroms_cubed'
     'electrons_per_picometres_cubed'                      '*'   1.0E+06
#
     'electrons_per_picometres_cubed'
     'electrons_per_nanometres_cubed'                      '*'   1.0E-09
     'electrons_per_picometres_cubed'
     'electrons_per_angstroms_cubed'                       '*'   1.0E-06
###
